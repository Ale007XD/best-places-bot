name: Deploy Telegram Bot to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Скачивание исходного кода репозитория (Actions Checkout)
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Создание .env файла (сохраняется именно в корне репозитория для деплоя)
      - name: Create .env file
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
          echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" >> .env
          echo "ADMIN_ID=${{ secrets.ADMIN_ID }}" >> .env

      # 3. Копирование проекта на VPS через SCP-ACTION (без git на сервере!)
      - name: Copy project files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          # указывайте ВСЕ реально используемые файлы/папки вашего проекта
          source: ".env,bot,fonts,Dockerfile,docker-compose.yml,requirements.txt"
          target: "~/best-places-bot"

      # 4. Подключение к VPS и запуск/обновление контейнера
      - name: Deploy and Restart via Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd ~/best-places-bot
            echo ">>> Stopping and removing old containers..."
            docker compose down || true
            echo ">>> Building and starting new containers..."
            docker compose up --build -d
            echo ">>> Pruning old Docker images..."
            docker image prune -f
            echo ">>> Deployment successful!"
